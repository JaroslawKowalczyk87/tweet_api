[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Klaud\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Klaud\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 88.5202ms
[debug]       Load.loadUnit: defsScala took 0.3234ms
[debug] [Loading] Scanning directory C:\Users\Klaud\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Klaud\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8514 ms
[debug]           Load.resolveProject(global-plugins) took 41.7939ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Klaud\.sbt\1.0\plugins, plugins: List(<none>))) took 84.5496ms
[debug] [Loading] Done in C:\Users\Klaud\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.8906ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2471ms
[debug]     Load.loadUnit(file:/C:/Users/Klaud/.sbt/1.0/plugins/, ...) took 201.0708ms
[debug]   Load.apply: load took 362.7351ms
[debug]   Load.apply: resolveProjects took 5.4696ms
[debug]   Load.apply: finalTransforms took 55.4836ms
[debug]   Load.apply: config.delegates took 7.0224ms
[debug]   Load.apply: Def.make(settings)... took 412.478ms
[debug]   Load.apply: structureIndex took 121.3219ms
[debug]   Load.apply: mkStreams took 2.6257ms
[info] loading global plugins from C:\Users\Klaud\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12217.4251ms
[debug]           Load.loadUnit: plugins took 25.9007ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\repos\sii-chalange\tweet-api-jk\project
[debug]             Load.loadUnit: mkEval took 9.3342ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\repos\sii-chalange\tweet-api-jk\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9508 ms
[info] loading settings for project tweet-api-jk-build from idea.sbt ...
[debug]               Load.resolveProject(tweet-api-jk-build) took 9.2706ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tweet-api-jk-build, base: C:\repos\sii-chalange\tweet-api-jk\project, plugins: List(<none>))) took 11.7518ms
[debug] [Loading] Done in C:\repos\sii-chalange\tweet-api-jk\project, returning: (tweet-api-jk-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2561.3532ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.4978ms
[debug]         Load.loadUnit(file:/C:/repos/sii-chalange/tweet-api-jk/project/, ...) took 2593.8275ms
[debug]       Load.apply: load took 2595.2956ms
[debug]       Load.apply: resolveProjects took 0.0891ms
[debug]       Load.apply: finalTransforms took 9.2362ms
[debug]       Load.apply: config.delegates took 0.3142ms
[debug]       Load.apply: Def.make(settings)... took 88.5354ms
[debug]       Load.apply: structureIndex took 22.4514ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\repos\sii-chalange\tweet-api-jk\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3414.4744ms
[debug]     Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\repos\sii-chalange\tweet-api-jk
[debug]       Load.loadUnit: mkEval took 0.529ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\repos\sii-chalange\tweet-api-jk, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7719 ms
[info] loading settings for project tweet-api-jk from build.sbt ...
[debug]         Load.resolveProject(tweet-api-jk) took 61.2615ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tweet-api-jk, base: C:\repos\sii-chalange\tweet-api-jk, plugins: List(<none>))) took 66.4023ms
[debug] [Loading] Done in C:\repos\sii-chalange\tweet-api-jk, returning: (tweet-api-jk)
[debug]     Load.loadUnit: loadedProjectsRaw took 1697.9773ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.5575ms
[debug]   Load.loadUnit(file:/C:/repos/sii-chalange/tweet-api-jk/, ...) took 5125.2123ms
[debug] Load.apply: load took 5127.205ms
[debug] Load.apply: resolveProjects took 0.1574ms
[debug] Load.apply: finalTransforms took 30.3732ms
[debug] Load.apply: config.delegates took 0.327ms
[debug] Load.apply: Def.make(settings)... took 124.4991ms
[debug] Load.apply: structureIndex took 39.0754ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to tweet-api (in build file:/C:/repos/sii-chalange/tweet-api-jk/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51529 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51529, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to tweet-api (in build file:/C:/repos/sii-chalange/tweet-api-jk/)
[debug] > Exec(idea-shell, None, None)
